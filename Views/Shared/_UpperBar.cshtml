
@model PageModel
<div class="container btn-group" style="background-color:aliceblue; border-radius:10px; height:45px;">
    <div class="col-4 p-0 justify-content-end mt-1">
        <form asp-action="index">
            <span class="btn-group">
                <input class="form-control" type="text"
                       name="SearchText"
                       value="@ViewBag.SearchText"
                       placeholder="Search Key" />

                <input class="p-1 btn btn-sm btn-danger"
                       style="border-radius:10px;"
                       type="submit" value="Search" />
            </span>
        </form>
    </div>
     <div class="container mt-1">
        <ul class="pagination justify-content-end">
            @if(Model.CurrentPage >1)
            {
                <li class=" page-item">
                    <a class="page-link" asp-action="@Model.Action"
                   asp-route-pg="1"
                   asp-route-pageSize="@Model.PageSize"
                   asp-route-SearchText="@Model.SearchText"
                   asp-route-sortExpression="model.SortExpression">
                        <!--sorting is not affected by page navigation-->
                    First
                </a> 
                </li>

                <li class=" page-item">
                    <a class="page-link" asp-action="@Model.Action"
                   asp-route-pg="@(Model.CurrentPage -1)"
                   asp-route-pageSize="@Model.PageSize"
                   asp-route-SearchText="@Model.SearchText"
                   asp-route-sortExpression="model.SortExpression">
                        <!--sorting is not affected by page navigation-->
                        Prev
                </a>
                </li>
            }
            @for (var pge = Model.StartPage; pge <= Model.EndPage; pge++)
            {
                <li class="page-item @(pge==Model.CurrentPage?"active" : "")">  <!--(pge == Model.CurrentPage ? "active" : "") is responsible for coloringthe clicked page  -->
                @if (pge != Model.CurrentPage)
                {
                    <a class="page-link" asp-action="@Model.Action"
                    asp-route-pg="@pge" 
                    asp-route-pageSize="@Model.PageSize"
                    asp-route-SearchText="@Model.SearchText"
                   asp-route-sortExpression="model.SortExpression"> <!--sorting is not affected by page navigation-->
                        @pge
                    </a>
                }
                 else
                {
                    <span class="page-link"> @pge</span>
                }
                </li>


                @if (Model.CurrentPage < Model.TotalPages)
                {
                    <li class=" page-item">
                        <a class="page-link" asp-action="@Model.Action"
                   asp-route-pg="@(Model.CurrentPage + 1)"
                   asp-route-pageSize="@Model.PageSize"
                   asp-route-SearchText="@Model.SearchText"
                   asp-route-sortExpression="model.SortExpression">
                            <!--sorting is not affected by page navigation-->
                            Next
                </a>
                    </li>

                    <li class=" page-item">
                        <a class="page-link" asp-action="@Model.Action"
                   asp-route-pg="@(Model.TotalPages)"
                   asp-route-pageSize="@Model.PageSize"
                   asp-route-SearchText="@Model.SearchText"
                   asp-route-sortExpression="model.SortExpression">
                            <!--sorting is not affected by page navigation-->
                            Last
                </a>
                    </li>
                }
            }
        </ul>
    </div>
</div>